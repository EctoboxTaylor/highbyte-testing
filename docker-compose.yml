# This is a DEV ONLY environment (Passwords are plain text, NOT held in "secrets" file)
# Updated 20210708
# Created by Taylor Turner

# ***********************************************************************************
#To get build custom image run command while in file location
#docker load -i ".\HighByte-Intelligence-Hub-3.2.0 Docker (Build 2023.9.6.1007).tar"
#docker load -i ".\HighByte-Intelligence-Hub-3.3.0 Docker (Build 2023.12.21.1209).tar"
#docker load -i ".\HighByte-Intelligence-Hub-3.4.0_Docker_Build-2024.2.16.51.tar"
#docker load -i ".\HighByte-Intelligence-Hub-3.4.2_Docker_Build-2024.5.7.4.tar"
# ***********************************************************************************

#version: '3.3' #Works on both Windows and Linux
services:

  highbyte:
    #image: highbyte:3.3.0 #Current customer version
    image: highbyte:3.4.2 #Offline testing version
    #container_name: highbyte
    #hostname: highbyte
    ports:
      - 45245:45245 # runtime REST API
      - 1885:1885 # Internal MQTT Broker
      - 8885:8885 # REST Data Server
    networks:
      - highbyte
    volumes:
      - hb_vol:/usr/local/highbyte/config
      - ./backups:/backups
    restart: always
    deploy:
        resources:
          limits:
            memory: 2G


  ignition:
    image: inductiveautomation/ignition:latest
    container_name: ignitionl
    hostname: ignition
    ports:
      - 8089:8088
      - 62541:62541 #Ignition OPCUA port
      #- 4840:4840 # Default OPCUA port
    networks:
      - highbyte
    stop_grace_period: 30s
    volumes:
      - gateway_data:/usr/local/bin/ignition/data
      - ./themes:/usr/local/bin/ignition/data/modules/com.inductiveautomation.perspective/themes
      - ./fonts:/usr/local/bin/ignition/data/modules/com.inductiveautomation.perspective/fonts
      - ./projects:/usr/local/bin/ignition/data/projects
      - ./backups:/backups
    logging:
      driver: "json-file"
      options: 
        max-size: "200k"
        max-file: "10"
    environment:
      GATEWAY_ADMIN_PASSWORD: "Ignition1!"
      ACCEPT_IGNITION_EULA: 'Y'
      GATEWAY_SYSTEM_NAME: mes_bootcamp
      GATEWAY_JDBC_RELINK: 'true'
      IGNITION_EDITION: standard
      TZ: "America/Edmonton"
    #command: >
    #  -r ./backups/backup.gwbk
    restart: always
    deploy:
        resources:
          limits:
            memory: 1G

  timescaledb:
    image: timescale/timescaledb:latest-pg16
    container_name: timescaledb
    networks:
      - highbyte
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "<password>" #Change this to a secure password
      POSTGRES_DB: "postgres"
    volumes:
      - timescaledb_data:/var/lib/postgresql/data
    restart: always
    deploy:
        resources:
          limits:
            memory: 1G


  uns_listener: 
    hostname: uns_listener
    build:
      context: ./uns_example
      dockerfile: uns_example.dockerfile
    image: uns_listener:local_dev
    networks:
      - highbyte
    volumes: 
      - ./uns_example/scripts:/app/scripts
    restart: always
    deploy:
        resources:
          limits:
            memory: 1G

  emqx:
    image: emqx:latest
    environment:
      - "EMQX_NAME=emqx"
      - "EMQX_HOST=127.0.0.1"
    volumes:
      - vol-emqx1-data:/opt/emqx/data
      - vol-emqx1-etc:/opt/emqx/etc
      - vol-emqx1-log:/opt/emqx/log
    ports:
      - "18083:18083"
      - "1883:1883"
    networks:
      - highbyte
    restart: always
    deploy:
      resources:
        limits:
          memory: 1G

  nodered:
    image: nodered/node-red:latest
    container_name: nodered
    networks:
      - highbyte
    ports:
      - "1880:1880"
    volumes:
      - nodered_data:/data
    restart: always
    deploy:
        resources:
          limits:
            memory: 1G

networks:
  highbyte:

volumes:
  gateway_data:
  timescaledb_data:
  nodered_data:
  hb_vol:
  vol-emqx1-data:
  vol-emqx1-etc:
  vol-emqx1-log:
